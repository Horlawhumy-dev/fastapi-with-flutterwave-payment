AWS_REGION_NAME
DATABASE_URL
JWT_KEY_ID
JWT_SIGNATURE_ALGORITHM



############### Flutterwave Test Sandbox Values ################
FLUTTERWAVE_PUBLIC_KEY=FLWPUBK_TEST-e42897d3c2d407e9412db715cfdaf3ec-X
FLUTTERWAVE_SECRET_KEY=FLWSECK_TEST-1a6f18d6822d8d3f959fd769eb41822e-X
FLUTTERWAVE_ENCRYPTION_KEY=FLWSECK_TEST51c031db9442
WAVE_BASE_URL=https://api.flutterwave.com/v3

CARD_NUMBER=5531886652142950
CVV=546
EXPIRY_MONTH=09
EXPIRY_YEAR=24
PIN=3310

If user already has card saved, use this to charge such;
    {
        "email": "",
        "amount": int,
        "fullname": "",
        "pin": 3310
    }
else

{
    "email": "",
    "amount": int,
    "fullname": "",
    "pin": 3310,
    "card_number": "",
    "cvv": "",
    "expiry_month": "",
    "expiry_year": ""
    }

Use this below for payment transfer initialization - \
ofcourse this is testing data but flutterwave is no more
allowing transfer from developer account. However every other works in the system
    {
    "account_bank": "044",
    "account_number": "0690000040",
    "amount": "",
    "narration": "Payment for things",
    "currency": "NGN",
    "rider_email": ""
    }

To credit and debit user balance internally, use this

 {
    "email": "",
    "amount": ""
 }